#日志配置文件说明

#配置根Logger,把它的级别设置为debug,并将日志显示到console和file上去
#日志级别为5级,分别是debug->info->warn->error->fatal
#(其中all表示打开所有日志记录,off表示关闭所有日志记录)
log4j.rootLogger=debug,console,file

#配置输出源:输出源console将把日志输出到控制台
#以下列出其它几种appender:
#org.apache.log4j.FileAppender(文件)
#org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件)
#org.apache.log4j.RollingFileAppender(文件大小达到指定尺寸时产生一个新的文件)
#org.apache.log4j.WriterAppender(将日志信息以流格式送到任意指定地方)
#org.apache.log4j.SocketAppender(Socket)
#org.apache.log4j.NtEventLogAppender(NT的Event Log)
#org.apache.log4j.JMSAppender(电子邮件)
#org.apache.log4j.ConsoleAppender(输出到控制台)
log4j.appender.console=org.apache.log4j.ConsoleAppender

#配置输出源的布局
#org.apache.log4j.PatternLayout:可以灵活地指定布局模式
#org.apache.log4j.HTMLLayout:以HTML表格形式布局
#org.apache.log4j.SimpleLayout:包含日志信息的级别和信息字符串
#org.apache.log4j.TTCCLayout:包含日志产生的时间，线程，类别等信息
log4j.appender.console.layout=org.apache.log4j.PatternLayout

#指定布局样式
#%m 输出代码中指定的消息
#%p 输出优先级,即debug,info,warn,error,fatal
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t	输出产生该日志事件的线程名
#%n	输出一个回车换行符
#%d	输出日志时间点的日期或时间，默认格式为ISO 8601,也可以在其后指定格式，如：%d{yyyy-MM-dd HH:mm:ss,SSS}
#%l 输出日志事件的发生位置，包括类目名，发生的线程，以及在代码中的行数
log4j.appender.console.layout.ConversionPattern=[%c.%p]%m%t%d{yyyy-MM-dd HH:mm:ss,SSS}%n

#输出源file将把日志输出到文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender

#日志输出的文件
log4j.appender.file.File=mylog.log

#是否在原有文件中添加日志
#log4j.appender.file.Append=false

log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%c.%p] %m %d{yyyy-MM-dd HH:mm:ss,SSS} $n

#文件的最大尺寸 
#log4j.appender.MaxFileSize=5MB











